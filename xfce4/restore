#!/bin/bash

xfconf-query -c xfce4-keyboard-shortcuts -p /commands/custom -Rr
xfconf-query -c xfce4-panels -p /panels -Rr
xfconf-query -c xfce4-panels -p /plugins -Rr

channels="displays keyboard-layout keyboards pointers ristretto thunar thunar-volman \
xfce4-appfinder xfce4-desktop xfce4-keyboard-shortcuts xfce4-notifyd xfce4-panel \
xfce4-power-manager xfce4-screensaver xfce4-session xfce4-settings-editor \
xfce4-settings-manager xfce4-taskmanager xfce4-terminal xfwm4 xsettings"

detect_type() {
    local val="$1"
    if [[ "$val" =~ ^(true|false)$ ]]; then
        echo "bool"
    elif [[ "$val" =~ ^-?[0-9]+$ ]]; then
        echo "int"
    elif [[ "$val" =~ ^-?[0-9]*\.[0-9]+$ ]]; then
        echo "double"
    else
        echo "string"
    fi
}

for channel in $channels; do
    config_file="$channel.txt"
    if [ -f "$config_file" ]; then
        echo "Applying settings from $config_file to channel $channel"
        while IFS= read -r line || [ -n "$line" ]; do
            # Skip empty lines and comments
            [ -z "$line" ] && continue
            echo "$line" | grep -qE '^\s*#' && continue

            prop=$(echo "$line" | awk '{print $1}')
            value=$(echo "$line" | cut -d' ' -f2- | sed 's/^[[:space:]]*//')

            # Check if it's an array (starts with [ and ends with ])
            if echo "$value" | grep -q '^\[.*\]$'; then
                # Strip square brackets
                array_content=$(echo "$value" | sed -e 's/^\[//' -e 's/\]$//')
                IFS=',' read -r -a elements <<< "$array_content"

                # Prepare type flags and values
                args=()
                for element in "${elements[@]}"; do
                    element=$(echo "$element" | xargs)  # trim
                    vtype=$(detect_type "$element")
                    args+=("-t" "$vtype" "-s" "$element")
                done

                xfconf-query -c "$channel" -p "$prop" -a -n "${args[@]}"
            else
                vtype=$(detect_type "$value")
                xfconf-query -c "$channel" -p "$prop" -t "$vtype" -s "$value" -n
            fi
        done < "$config_file"
    else
        echo "Config file '$config_file' does not exist."
    fi
done
